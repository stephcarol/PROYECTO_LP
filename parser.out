Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    APOSTROPHE
    BACKSLASH
    BITAND
    BITNOT
    BITOR
    BITXOR
    BREAK
    CASE
    CATCH
    CIN
    CONST
    CONTINUE
    COUT
    DEFAULT
    DELETE
    DIVIDEEQUAL
    DO
    ENDL
    EXPLICIT
    FOR
    GET
    HASH
    INCLUDE
    MINUSEQUAL
    MINUSMINUS
    MODULE
    NAMESPACE
    NOT
    OR
    PLUSEQUAL
    PLUSPLUS
    POINT
    PRIVATE
    PUBLIC
    QUOTES
    RETURN
    SIZEOF
    STATIC
    STD
    TIMESEQUAL
    TRY
    TYPEDEF
    USING
    WHITESPACE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> declaracion_lista
Rule 2     declaracion_lista -> declaracion_lista declaracion
Rule 3     declaracion_lista -> declaracion
Rule 4     declaracion -> declaracion_var
Rule 5     declaracion -> declaracion_funcion
Rule 6     declaracion -> declaracion_EC
Rule 7     declaracion -> declaracion_clase
Rule 8     declaracion_var -> especificador ID SEMICOLON
Rule 9     declaracion_var -> especificador ID EQUAL expresion SEMICOLON
Rule 10    declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON
Rule 11    especificador -> INT
Rule 12    especificador -> FLOAT
Rule 13    especificador -> DOUBLE
Rule 14    especificador -> CHAR
Rule 15    especificador -> STRING
Rule 16    especificador -> BOOL
Rule 17    declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt
Rule 18    declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt
Rule 19    parametro -> parametro_lista
Rule 20    parametro -> VOID
Rule 21    parametro_lista -> parametro_lista COMMA param
Rule 22    parametro_lista -> param
Rule 23    param -> especificador ID
Rule 24    param -> especificador ID LBRACKET RBRACKET
Rule 25    expresion -> ID
Rule 26    expresion -> NUMBER
Rule 27    expresion -> ID EQUAL expresion
Rule 28    expresion -> expresion_simple
Rule 29    expresion -> LPAREN expresion RPAREN
Rule 30    expresion_simple -> expresion_aditiva igualdad expresion_aditiva
Rule 31    expresion_simple -> expresion_aditiva
Rule 32    igualdad -> LESS
Rule 33    igualdad -> LESSEQUAL
Rule 34    igualdad -> GREATER
Rule 35    igualdad -> GREATEREQUAL
Rule 36    igualdad -> DEQUAL
Rule 37    igualdad -> DISTINT
Rule 38    expresion_aditiva -> expresion_aditiva sumorest termino
Rule 39    expresion_aditiva -> termino
Rule 40    sumorest -> PLUS
Rule 41    sumorest -> MINUS
Rule 42    termino -> termino multodiv factor
Rule 43    termino -> factor
Rule 44    multodiv -> TIMES
Rule 45    multodiv -> DIVIDE
Rule 46    factor -> LPAREN expresion RPAREN
Rule 47    factor -> declaracion_var
Rule 48    factor -> NUMBER
Rule 49    estructura_dato -> array_init
Rule 50    estructura_dato -> tuple_init
Rule 51    estructura_dato -> vector_init
Rule 52    array_init -> LBRACKET expresion_list RBRACKET
Rule 53    tuple_init -> LPAREN expresion_list RPAREN
Rule 54    vector_init -> LGREATER expresion_list RGREATER
Rule 55    expresion_list -> expresion_list COMMA expresion
Rule 56    expresion_list -> expresion
Rule 57    expresion_list -> empty
Rule 58    declaracion_EC -> selection_stmt
Rule 59    declaracion_EC -> iteration_stmt
Rule 60    selection_stmt -> IF LPAREN expresion RPAREN statement
Rule 61    selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement
Rule 62    selection_stmt -> SWITCH LPAREN expresion RPAREN statement
Rule 63    iteration_stmt -> WHILE LPAREN expresion RPAREN statement
Rule 64    statement -> expresion_stmt
Rule 65    statement -> compound_stmt
Rule 66    expresion_stmt -> expresion SEMICOLON
Rule 67    expresion_stmt -> SEMICOLON
Rule 68    compound_stmt -> LBLOCK statement_list RBLOCK
Rule 69    statement_list -> statement_list statement
Rule 70    statement_list -> statement
Rule 71    declaracion_clase -> class_header LBLOCK class_body RBLOCK
Rule 72    class_header -> CLASS ID
Rule 73    class_header -> CLASS ID COLON especificador
Rule 74    class_body -> class_member_list
Rule 75    class_member_list -> class_member_list class_member
Rule 76    class_member_list -> class_member
Rule 77    class_member -> especificador ID SEMICOLON
Rule 78    class_member -> especificador ID EQUAL expresion SEMICOLON
Rule 79    class_member -> especificador ID LPAREN parametro RPAREN compound_stmt
Rule 80    class_member -> VOID ID LPAREN parametro RPAREN compound_stmt
Rule 81    class_member -> declaracion_EC
Rule 82    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
APOSTROPHE           : 
BACKSLASH            : 
BITAND               : 
BITNOT               : 
BITOR                : 
BITXOR               : 
BOOL                 : 16
BREAK                : 
CASE                 : 
CATCH                : 
CHAR                 : 14
CIN                  : 
CLASS                : 72 73
COLON                : 73
COMMA                : 21 55
CONST                : 
CONTINUE             : 
COUT                 : 
DEFAULT              : 
DELETE               : 
DEQUAL               : 36
DISTINT              : 37
DIVIDE               : 45
DIVIDEEQUAL          : 
DO                   : 
DOUBLE               : 13
ELSE                 : 61
ENDL                 : 
EQUAL                : 9 10 27 78
EXPLICIT             : 
FLOAT                : 12
FOR                  : 
GET                  : 
GREATER              : 34
GREATEREQUAL         : 35
HASH                 : 
ID                   : 8 9 10 17 18 23 24 25 27 72 73 77 78 79 80
IF                   : 60 61
INCLUDE              : 
INT                  : 11
LBLOCK               : 68 71
LBRACKET             : 24 52
LESS                 : 32
LESSEQUAL            : 33
LGREATER             : 54
LPAREN               : 17 18 29 46 53 60 61 62 63 79 80
MINUS                : 41
MINUSEQUAL           : 
MINUSMINUS           : 
MODULE               : 
NAMESPACE            : 
NOT                  : 
NUMBER               : 26 48
OR                   : 
PLUS                 : 40
PLUSEQUAL            : 
PLUSPLUS             : 
POINT                : 
PRIVATE              : 
PUBLIC               : 
QUOTES               : 
RBLOCK               : 68 71
RBRACKET             : 24 52
RETURN               : 
RGREATER             : 54
RPAREN               : 17 18 29 46 53 60 61 62 63 79 80
SEMICOLON            : 8 9 10 66 67 77 78
SIZEOF               : 
STATIC               : 
STD                  : 
STRING               : 15
SWITCH               : 62
TIMES                : 44
TIMESEQUAL           : 
TRY                  : 
TYPEDEF              : 
USING                : 
VOID                 : 18 20 80
WHILE                : 63
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

array_init           : 49
class_body           : 71
class_header         : 71
class_member         : 75 76
class_member_list    : 74 75
compound_stmt        : 17 18 65 79 80
declaracion          : 2 3
declaracion_EC       : 6 81
declaracion_clase    : 7
declaracion_funcion  : 5
declaracion_lista    : 1 2
declaracion_var      : 4 47
empty                : 57
especificador        : 8 9 10 17 23 24 73 77 78 79
estructura_dato      : 10
expresion            : 9 27 29 46 55 56 60 61 62 63 66 78
expresion_aditiva    : 30 30 31 38
expresion_list       : 52 53 54 55
expresion_simple     : 28
expresion_stmt       : 64
factor               : 42 43
igualdad             : 30
iteration_stmt       : 59
multodiv             : 42
param                : 21 22
parametro            : 17 18 79 80
parametro_lista      : 19 21
programa             : 0
selection_stmt       : 58
statement            : 60 61 61 62 63 69 70
statement_list       : 68 69
sumorest             : 38
termino              : 38 39 42
tuple_init           : 50
vector_init          : 51

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . declaracion_lista
    (2) declaracion_lista -> . declaracion_lista declaracion
    (3) declaracion_lista -> . declaracion
    (4) declaracion -> . declaracion_var
    (5) declaracion -> . declaracion_funcion
    (6) declaracion -> . declaracion_EC
    (7) declaracion -> . declaracion_clase
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (17) declaracion_funcion -> . especificador ID LPAREN parametro RPAREN compound_stmt
    (18) declaracion_funcion -> . VOID ID LPAREN parametro RPAREN compound_stmt
    (58) declaracion_EC -> . selection_stmt
    (59) declaracion_EC -> . iteration_stmt
    (71) declaracion_clase -> . class_header LBLOCK class_body RBLOCK
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL
    (60) selection_stmt -> . IF LPAREN expresion RPAREN statement
    (61) selection_stmt -> . IF LPAREN expresion RPAREN statement ELSE statement
    (62) selection_stmt -> . SWITCH LPAREN expresion RPAREN statement
    (63) iteration_stmt -> . WHILE LPAREN expresion RPAREN statement
    (72) class_header -> . CLASS ID
    (73) class_header -> . CLASS ID COLON especificador

    VOID            shift and go to state 9
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    CLASS           shift and go to state 22

    programa                       shift and go to state 1
    declaracion_lista              shift and go to state 2
    declaracion                    shift and go to state 3
    declaracion_var                shift and go to state 4
    declaracion_funcion            shift and go to state 5
    declaracion_EC                 shift and go to state 6
    declaracion_clase              shift and go to state 7
    especificador                  shift and go to state 8
    selection_stmt                 shift and go to state 10
    iteration_stmt                 shift and go to state 11
    class_header                   shift and go to state 12

state 1

    (0) S' -> programa .



state 2

    (1) programa -> declaracion_lista .
    (2) declaracion_lista -> declaracion_lista . declaracion
    (4) declaracion -> . declaracion_var
    (5) declaracion -> . declaracion_funcion
    (6) declaracion -> . declaracion_EC
    (7) declaracion -> . declaracion_clase
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (17) declaracion_funcion -> . especificador ID LPAREN parametro RPAREN compound_stmt
    (18) declaracion_funcion -> . VOID ID LPAREN parametro RPAREN compound_stmt
    (58) declaracion_EC -> . selection_stmt
    (59) declaracion_EC -> . iteration_stmt
    (71) declaracion_clase -> . class_header LBLOCK class_body RBLOCK
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL
    (60) selection_stmt -> . IF LPAREN expresion RPAREN statement
    (61) selection_stmt -> . IF LPAREN expresion RPAREN statement ELSE statement
    (62) selection_stmt -> . SWITCH LPAREN expresion RPAREN statement
    (63) iteration_stmt -> . WHILE LPAREN expresion RPAREN statement
    (72) class_header -> . CLASS ID
    (73) class_header -> . CLASS ID COLON especificador

    $end            reduce using rule 1 (programa -> declaracion_lista .)
    VOID            shift and go to state 9
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    CLASS           shift and go to state 22

    declaracion                    shift and go to state 23
    declaracion_var                shift and go to state 4
    declaracion_funcion            shift and go to state 5
    declaracion_EC                 shift and go to state 6
    declaracion_clase              shift and go to state 7
    especificador                  shift and go to state 8
    selection_stmt                 shift and go to state 10
    iteration_stmt                 shift and go to state 11
    class_header                   shift and go to state 12

state 3

    (3) declaracion_lista -> declaracion .

    VOID            reduce using rule 3 (declaracion_lista -> declaracion .)
    INT             reduce using rule 3 (declaracion_lista -> declaracion .)
    FLOAT           reduce using rule 3 (declaracion_lista -> declaracion .)
    DOUBLE          reduce using rule 3 (declaracion_lista -> declaracion .)
    CHAR            reduce using rule 3 (declaracion_lista -> declaracion .)
    STRING          reduce using rule 3 (declaracion_lista -> declaracion .)
    BOOL            reduce using rule 3 (declaracion_lista -> declaracion .)
    IF              reduce using rule 3 (declaracion_lista -> declaracion .)
    SWITCH          reduce using rule 3 (declaracion_lista -> declaracion .)
    WHILE           reduce using rule 3 (declaracion_lista -> declaracion .)
    CLASS           reduce using rule 3 (declaracion_lista -> declaracion .)
    $end            reduce using rule 3 (declaracion_lista -> declaracion .)


state 4

    (4) declaracion -> declaracion_var .

    VOID            reduce using rule 4 (declaracion -> declaracion_var .)
    INT             reduce using rule 4 (declaracion -> declaracion_var .)
    FLOAT           reduce using rule 4 (declaracion -> declaracion_var .)
    DOUBLE          reduce using rule 4 (declaracion -> declaracion_var .)
    CHAR            reduce using rule 4 (declaracion -> declaracion_var .)
    STRING          reduce using rule 4 (declaracion -> declaracion_var .)
    BOOL            reduce using rule 4 (declaracion -> declaracion_var .)
    IF              reduce using rule 4 (declaracion -> declaracion_var .)
    SWITCH          reduce using rule 4 (declaracion -> declaracion_var .)
    WHILE           reduce using rule 4 (declaracion -> declaracion_var .)
    CLASS           reduce using rule 4 (declaracion -> declaracion_var .)
    $end            reduce using rule 4 (declaracion -> declaracion_var .)


state 5

    (5) declaracion -> declaracion_funcion .

    VOID            reduce using rule 5 (declaracion -> declaracion_funcion .)
    INT             reduce using rule 5 (declaracion -> declaracion_funcion .)
    FLOAT           reduce using rule 5 (declaracion -> declaracion_funcion .)
    DOUBLE          reduce using rule 5 (declaracion -> declaracion_funcion .)
    CHAR            reduce using rule 5 (declaracion -> declaracion_funcion .)
    STRING          reduce using rule 5 (declaracion -> declaracion_funcion .)
    BOOL            reduce using rule 5 (declaracion -> declaracion_funcion .)
    IF              reduce using rule 5 (declaracion -> declaracion_funcion .)
    SWITCH          reduce using rule 5 (declaracion -> declaracion_funcion .)
    WHILE           reduce using rule 5 (declaracion -> declaracion_funcion .)
    CLASS           reduce using rule 5 (declaracion -> declaracion_funcion .)
    $end            reduce using rule 5 (declaracion -> declaracion_funcion .)


state 6

    (6) declaracion -> declaracion_EC .

    VOID            reduce using rule 6 (declaracion -> declaracion_EC .)
    INT             reduce using rule 6 (declaracion -> declaracion_EC .)
    FLOAT           reduce using rule 6 (declaracion -> declaracion_EC .)
    DOUBLE          reduce using rule 6 (declaracion -> declaracion_EC .)
    CHAR            reduce using rule 6 (declaracion -> declaracion_EC .)
    STRING          reduce using rule 6 (declaracion -> declaracion_EC .)
    BOOL            reduce using rule 6 (declaracion -> declaracion_EC .)
    IF              reduce using rule 6 (declaracion -> declaracion_EC .)
    SWITCH          reduce using rule 6 (declaracion -> declaracion_EC .)
    WHILE           reduce using rule 6 (declaracion -> declaracion_EC .)
    CLASS           reduce using rule 6 (declaracion -> declaracion_EC .)
    $end            reduce using rule 6 (declaracion -> declaracion_EC .)


state 7

    (7) declaracion -> declaracion_clase .

    VOID            reduce using rule 7 (declaracion -> declaracion_clase .)
    INT             reduce using rule 7 (declaracion -> declaracion_clase .)
    FLOAT           reduce using rule 7 (declaracion -> declaracion_clase .)
    DOUBLE          reduce using rule 7 (declaracion -> declaracion_clase .)
    CHAR            reduce using rule 7 (declaracion -> declaracion_clase .)
    STRING          reduce using rule 7 (declaracion -> declaracion_clase .)
    BOOL            reduce using rule 7 (declaracion -> declaracion_clase .)
    IF              reduce using rule 7 (declaracion -> declaracion_clase .)
    SWITCH          reduce using rule 7 (declaracion -> declaracion_clase .)
    WHILE           reduce using rule 7 (declaracion -> declaracion_clase .)
    CLASS           reduce using rule 7 (declaracion -> declaracion_clase .)
    $end            reduce using rule 7 (declaracion -> declaracion_clase .)


state 8

    (8) declaracion_var -> especificador . ID SEMICOLON
    (9) declaracion_var -> especificador . ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> especificador . ID EQUAL estructura_dato SEMICOLON
    (17) declaracion_funcion -> especificador . ID LPAREN parametro RPAREN compound_stmt

    ID              shift and go to state 24


state 9

    (18) declaracion_funcion -> VOID . ID LPAREN parametro RPAREN compound_stmt

    ID              shift and go to state 25


state 10

    (58) declaracion_EC -> selection_stmt .

    VOID            reduce using rule 58 (declaracion_EC -> selection_stmt .)
    INT             reduce using rule 58 (declaracion_EC -> selection_stmt .)
    FLOAT           reduce using rule 58 (declaracion_EC -> selection_stmt .)
    DOUBLE          reduce using rule 58 (declaracion_EC -> selection_stmt .)
    CHAR            reduce using rule 58 (declaracion_EC -> selection_stmt .)
    STRING          reduce using rule 58 (declaracion_EC -> selection_stmt .)
    BOOL            reduce using rule 58 (declaracion_EC -> selection_stmt .)
    IF              reduce using rule 58 (declaracion_EC -> selection_stmt .)
    SWITCH          reduce using rule 58 (declaracion_EC -> selection_stmt .)
    WHILE           reduce using rule 58 (declaracion_EC -> selection_stmt .)
    CLASS           reduce using rule 58 (declaracion_EC -> selection_stmt .)
    $end            reduce using rule 58 (declaracion_EC -> selection_stmt .)
    RBLOCK          reduce using rule 58 (declaracion_EC -> selection_stmt .)


state 11

    (59) declaracion_EC -> iteration_stmt .

    VOID            reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    INT             reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    FLOAT           reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    DOUBLE          reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    CHAR            reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    STRING          reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    BOOL            reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    IF              reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    SWITCH          reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    WHILE           reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    CLASS           reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    $end            reduce using rule 59 (declaracion_EC -> iteration_stmt .)
    RBLOCK          reduce using rule 59 (declaracion_EC -> iteration_stmt .)


state 12

    (71) declaracion_clase -> class_header . LBLOCK class_body RBLOCK

    LBLOCK          shift and go to state 26


state 13

    (11) especificador -> INT .

    ID              reduce using rule 11 (especificador -> INT .)
    LBLOCK          reduce using rule 11 (especificador -> INT .)


state 14

    (12) especificador -> FLOAT .

    ID              reduce using rule 12 (especificador -> FLOAT .)
    LBLOCK          reduce using rule 12 (especificador -> FLOAT .)


state 15

    (13) especificador -> DOUBLE .

    ID              reduce using rule 13 (especificador -> DOUBLE .)
    LBLOCK          reduce using rule 13 (especificador -> DOUBLE .)


state 16

    (14) especificador -> CHAR .

    ID              reduce using rule 14 (especificador -> CHAR .)
    LBLOCK          reduce using rule 14 (especificador -> CHAR .)


state 17

    (15) especificador -> STRING .

    ID              reduce using rule 15 (especificador -> STRING .)
    LBLOCK          reduce using rule 15 (especificador -> STRING .)


state 18

    (16) especificador -> BOOL .

    ID              reduce using rule 16 (especificador -> BOOL .)
    LBLOCK          reduce using rule 16 (especificador -> BOOL .)


state 19

    (60) selection_stmt -> IF . LPAREN expresion RPAREN statement
    (61) selection_stmt -> IF . LPAREN expresion RPAREN statement ELSE statement

    LPAREN          shift and go to state 27


state 20

    (62) selection_stmt -> SWITCH . LPAREN expresion RPAREN statement

    LPAREN          shift and go to state 28


state 21

    (63) iteration_stmt -> WHILE . LPAREN expresion RPAREN statement

    LPAREN          shift and go to state 29


state 22

    (72) class_header -> CLASS . ID
    (73) class_header -> CLASS . ID COLON especificador

    ID              shift and go to state 30


state 23

    (2) declaracion_lista -> declaracion_lista declaracion .

    VOID            reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    INT             reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    FLOAT           reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    DOUBLE          reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    CHAR            reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    STRING          reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    BOOL            reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    IF              reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    SWITCH          reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    WHILE           reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    CLASS           reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)
    $end            reduce using rule 2 (declaracion_lista -> declaracion_lista declaracion .)


state 24

    (8) declaracion_var -> especificador ID . SEMICOLON
    (9) declaracion_var -> especificador ID . EQUAL expresion SEMICOLON
    (10) declaracion_var -> especificador ID . EQUAL estructura_dato SEMICOLON
    (17) declaracion_funcion -> especificador ID . LPAREN parametro RPAREN compound_stmt

    SEMICOLON       shift and go to state 31
    EQUAL           shift and go to state 32
    LPAREN          shift and go to state 33


state 25

    (18) declaracion_funcion -> VOID ID . LPAREN parametro RPAREN compound_stmt

    LPAREN          shift and go to state 34


state 26

    (71) declaracion_clase -> class_header LBLOCK . class_body RBLOCK
    (74) class_body -> . class_member_list
    (75) class_member_list -> . class_member_list class_member
    (76) class_member_list -> . class_member
    (77) class_member -> . especificador ID SEMICOLON
    (78) class_member -> . especificador ID EQUAL expresion SEMICOLON
    (79) class_member -> . especificador ID LPAREN parametro RPAREN compound_stmt
    (80) class_member -> . VOID ID LPAREN parametro RPAREN compound_stmt
    (81) class_member -> . declaracion_EC
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL
    (58) declaracion_EC -> . selection_stmt
    (59) declaracion_EC -> . iteration_stmt
    (60) selection_stmt -> . IF LPAREN expresion RPAREN statement
    (61) selection_stmt -> . IF LPAREN expresion RPAREN statement ELSE statement
    (62) selection_stmt -> . SWITCH LPAREN expresion RPAREN statement
    (63) iteration_stmt -> . WHILE LPAREN expresion RPAREN statement

    VOID            shift and go to state 39
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21

    class_body                     shift and go to state 35
    class_member_list              shift and go to state 36
    class_member                   shift and go to state 37
    especificador                  shift and go to state 38
    declaracion_EC                 shift and go to state 40
    selection_stmt                 shift and go to state 10
    iteration_stmt                 shift and go to state 11

state 27

    (60) selection_stmt -> IF LPAREN . expresion RPAREN statement
    (61) selection_stmt -> IF LPAREN . expresion RPAREN statement ELSE statement
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 42
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 28

    (62) selection_stmt -> SWITCH LPAREN . expresion RPAREN statement
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 51
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 29

    (63) iteration_stmt -> WHILE LPAREN . expresion RPAREN statement
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 52
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 30

    (72) class_header -> CLASS ID .
    (73) class_header -> CLASS ID . COLON especificador

    LBLOCK          reduce using rule 72 (class_header -> CLASS ID .)
    COLON           shift and go to state 53


state 31

    (8) declaracion_var -> especificador ID SEMICOLON .

    VOID            reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    INT             reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    FLOAT           reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    DOUBLE          reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    CHAR            reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    STRING          reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    BOOL            reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    IF              reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    SWITCH          reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    WHILE           reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    CLASS           reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    $end            reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    TIMES           reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    DIVIDE          reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    LESS            reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    LESSEQUAL       reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    GREATER         reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    GREATEREQUAL    reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    DEQUAL          reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    DISTINT         reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    PLUS            reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    MINUS           reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    RPAREN          reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    SEMICOLON       reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    COMMA           reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    RBRACKET        reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)
    RGREATER        reduce using rule 8 (declaracion_var -> especificador ID SEMICOLON .)


state 32

    (9) declaracion_var -> especificador ID EQUAL . expresion SEMICOLON
    (10) declaracion_var -> especificador ID EQUAL . estructura_dato SEMICOLON
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (49) estructura_dato -> . array_init
    (50) estructura_dato -> . tuple_init
    (51) estructura_dato -> . vector_init
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (52) array_init -> . LBRACKET expresion_list RBRACKET
    (53) tuple_init -> . LPAREN expresion_list RPAREN
    (54) vector_init -> . LGREATER expresion_list RGREATER
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 56
    LBRACKET        shift and go to state 60
    LGREATER        shift and go to state 61
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    especificador                  shift and go to state 50
    expresion                      shift and go to state 54
    estructura_dato                shift and go to state 55
    expresion_simple               shift and go to state 45
    array_init                     shift and go to state 57
    tuple_init                     shift and go to state 58
    vector_init                    shift and go to state 59
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49

state 33

    (17) declaracion_funcion -> especificador ID LPAREN . parametro RPAREN compound_stmt
    (19) parametro -> . parametro_lista
    (20) parametro -> . VOID
    (21) parametro_lista -> . parametro_lista COMMA param
    (22) parametro_lista -> . param
    (23) param -> . especificador ID
    (24) param -> . especificador ID LBRACKET RBRACKET
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    VOID            shift and go to state 65
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    especificador                  shift and go to state 62
    parametro                      shift and go to state 63
    parametro_lista                shift and go to state 64
    param                          shift and go to state 66

state 34

    (18) declaracion_funcion -> VOID ID LPAREN . parametro RPAREN compound_stmt
    (19) parametro -> . parametro_lista
    (20) parametro -> . VOID
    (21) parametro_lista -> . parametro_lista COMMA param
    (22) parametro_lista -> . param
    (23) param -> . especificador ID
    (24) param -> . especificador ID LBRACKET RBRACKET
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    VOID            shift and go to state 65
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    parametro                      shift and go to state 67
    parametro_lista                shift and go to state 64
    param                          shift and go to state 66
    especificador                  shift and go to state 62

state 35

    (71) declaracion_clase -> class_header LBLOCK class_body . RBLOCK

    RBLOCK          shift and go to state 68


state 36

    (74) class_body -> class_member_list .
    (75) class_member_list -> class_member_list . class_member
    (77) class_member -> . especificador ID SEMICOLON
    (78) class_member -> . especificador ID EQUAL expresion SEMICOLON
    (79) class_member -> . especificador ID LPAREN parametro RPAREN compound_stmt
    (80) class_member -> . VOID ID LPAREN parametro RPAREN compound_stmt
    (81) class_member -> . declaracion_EC
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL
    (58) declaracion_EC -> . selection_stmt
    (59) declaracion_EC -> . iteration_stmt
    (60) selection_stmt -> . IF LPAREN expresion RPAREN statement
    (61) selection_stmt -> . IF LPAREN expresion RPAREN statement ELSE statement
    (62) selection_stmt -> . SWITCH LPAREN expresion RPAREN statement
    (63) iteration_stmt -> . WHILE LPAREN expresion RPAREN statement

    RBLOCK          reduce using rule 74 (class_body -> class_member_list .)
    VOID            shift and go to state 39
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21

    class_member                   shift and go to state 69
    especificador                  shift and go to state 38
    declaracion_EC                 shift and go to state 40
    selection_stmt                 shift and go to state 10
    iteration_stmt                 shift and go to state 11

state 37

    (76) class_member_list -> class_member .

    VOID            reduce using rule 76 (class_member_list -> class_member .)
    INT             reduce using rule 76 (class_member_list -> class_member .)
    FLOAT           reduce using rule 76 (class_member_list -> class_member .)
    DOUBLE          reduce using rule 76 (class_member_list -> class_member .)
    CHAR            reduce using rule 76 (class_member_list -> class_member .)
    STRING          reduce using rule 76 (class_member_list -> class_member .)
    BOOL            reduce using rule 76 (class_member_list -> class_member .)
    IF              reduce using rule 76 (class_member_list -> class_member .)
    SWITCH          reduce using rule 76 (class_member_list -> class_member .)
    WHILE           reduce using rule 76 (class_member_list -> class_member .)
    RBLOCK          reduce using rule 76 (class_member_list -> class_member .)


state 38

    (77) class_member -> especificador . ID SEMICOLON
    (78) class_member -> especificador . ID EQUAL expresion SEMICOLON
    (79) class_member -> especificador . ID LPAREN parametro RPAREN compound_stmt

    ID              shift and go to state 70


state 39

    (80) class_member -> VOID . ID LPAREN parametro RPAREN compound_stmt

    ID              shift and go to state 71


state 40

    (81) class_member -> declaracion_EC .

    VOID            reduce using rule 81 (class_member -> declaracion_EC .)
    INT             reduce using rule 81 (class_member -> declaracion_EC .)
    FLOAT           reduce using rule 81 (class_member -> declaracion_EC .)
    DOUBLE          reduce using rule 81 (class_member -> declaracion_EC .)
    CHAR            reduce using rule 81 (class_member -> declaracion_EC .)
    STRING          reduce using rule 81 (class_member -> declaracion_EC .)
    BOOL            reduce using rule 81 (class_member -> declaracion_EC .)
    IF              reduce using rule 81 (class_member -> declaracion_EC .)
    SWITCH          reduce using rule 81 (class_member -> declaracion_EC .)
    WHILE           reduce using rule 81 (class_member -> declaracion_EC .)
    RBLOCK          reduce using rule 81 (class_member -> declaracion_EC .)


state 41

    (29) expresion -> LPAREN . expresion RPAREN
    (46) factor -> LPAREN . expresion RPAREN
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 72
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 42

    (60) selection_stmt -> IF LPAREN expresion . RPAREN statement
    (61) selection_stmt -> IF LPAREN expresion . RPAREN statement ELSE statement

    RPAREN          shift and go to state 73


state 43

    (25) expresion -> ID .
    (27) expresion -> ID . EQUAL expresion

    RPAREN          reduce using rule 25 (expresion -> ID .)
    SEMICOLON       reduce using rule 25 (expresion -> ID .)
    COMMA           reduce using rule 25 (expresion -> ID .)
    RBRACKET        reduce using rule 25 (expresion -> ID .)
    RGREATER        reduce using rule 25 (expresion -> ID .)
    EQUAL           shift and go to state 74


state 44

    (26) expresion -> NUMBER .
    (48) factor -> NUMBER .

  ! reduce/reduce conflict for RPAREN resolved using rule 26 (expresion -> NUMBER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 26 (expresion -> NUMBER .)
  ! reduce/reduce conflict for COMMA resolved using rule 26 (expresion -> NUMBER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 26 (expresion -> NUMBER .)
  ! reduce/reduce conflict for RGREATER resolved using rule 26 (expresion -> NUMBER .)
    RPAREN          reduce using rule 26 (expresion -> NUMBER .)
    SEMICOLON       reduce using rule 26 (expresion -> NUMBER .)
    COMMA           reduce using rule 26 (expresion -> NUMBER .)
    RBRACKET        reduce using rule 26 (expresion -> NUMBER .)
    RGREATER        reduce using rule 26 (expresion -> NUMBER .)
    TIMES           reduce using rule 48 (factor -> NUMBER .)
    DIVIDE          reduce using rule 48 (factor -> NUMBER .)
    LESS            reduce using rule 48 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 48 (factor -> NUMBER .)
    GREATER         reduce using rule 48 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 48 (factor -> NUMBER .)
    DEQUAL          reduce using rule 48 (factor -> NUMBER .)
    DISTINT         reduce using rule 48 (factor -> NUMBER .)
    PLUS            reduce using rule 48 (factor -> NUMBER .)
    MINUS           reduce using rule 48 (factor -> NUMBER .)

  ! RPAREN          [ reduce using rule 48 (factor -> NUMBER .) ]
  ! SEMICOLON       [ reduce using rule 48 (factor -> NUMBER .) ]
  ! COMMA           [ reduce using rule 48 (factor -> NUMBER .) ]
  ! RBRACKET        [ reduce using rule 48 (factor -> NUMBER .) ]
  ! RGREATER        [ reduce using rule 48 (factor -> NUMBER .) ]


state 45

    (28) expresion -> expresion_simple .

    RPAREN          reduce using rule 28 (expresion -> expresion_simple .)
    SEMICOLON       reduce using rule 28 (expresion -> expresion_simple .)
    COMMA           reduce using rule 28 (expresion -> expresion_simple .)
    RBRACKET        reduce using rule 28 (expresion -> expresion_simple .)
    RGREATER        reduce using rule 28 (expresion -> expresion_simple .)


state 46

    (30) expresion_simple -> expresion_aditiva . igualdad expresion_aditiva
    (31) expresion_simple -> expresion_aditiva .
    (38) expresion_aditiva -> expresion_aditiva . sumorest termino
    (32) igualdad -> . LESS
    (33) igualdad -> . LESSEQUAL
    (34) igualdad -> . GREATER
    (35) igualdad -> . GREATEREQUAL
    (36) igualdad -> . DEQUAL
    (37) igualdad -> . DISTINT
    (40) sumorest -> . PLUS
    (41) sumorest -> . MINUS

    RPAREN          reduce using rule 31 (expresion_simple -> expresion_aditiva .)
    SEMICOLON       reduce using rule 31 (expresion_simple -> expresion_aditiva .)
    COMMA           reduce using rule 31 (expresion_simple -> expresion_aditiva .)
    RBRACKET        reduce using rule 31 (expresion_simple -> expresion_aditiva .)
    RGREATER        reduce using rule 31 (expresion_simple -> expresion_aditiva .)
    LESS            shift and go to state 77
    LESSEQUAL       shift and go to state 78
    GREATER         shift and go to state 79
    GREATEREQUAL    shift and go to state 80
    DEQUAL          shift and go to state 81
    DISTINT         shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84

    igualdad                       shift and go to state 75
    sumorest                       shift and go to state 76

state 47

    (39) expresion_aditiva -> termino .
    (42) termino -> termino . multodiv factor
    (44) multodiv -> . TIMES
    (45) multodiv -> . DIVIDE

    LESS            reduce using rule 39 (expresion_aditiva -> termino .)
    LESSEQUAL       reduce using rule 39 (expresion_aditiva -> termino .)
    GREATER         reduce using rule 39 (expresion_aditiva -> termino .)
    GREATEREQUAL    reduce using rule 39 (expresion_aditiva -> termino .)
    DEQUAL          reduce using rule 39 (expresion_aditiva -> termino .)
    DISTINT         reduce using rule 39 (expresion_aditiva -> termino .)
    PLUS            reduce using rule 39 (expresion_aditiva -> termino .)
    MINUS           reduce using rule 39 (expresion_aditiva -> termino .)
    RPAREN          reduce using rule 39 (expresion_aditiva -> termino .)
    SEMICOLON       reduce using rule 39 (expresion_aditiva -> termino .)
    COMMA           reduce using rule 39 (expresion_aditiva -> termino .)
    RBRACKET        reduce using rule 39 (expresion_aditiva -> termino .)
    RGREATER        reduce using rule 39 (expresion_aditiva -> termino .)
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87

    multodiv                       shift and go to state 85

state 48

    (43) termino -> factor .

    TIMES           reduce using rule 43 (termino -> factor .)
    DIVIDE          reduce using rule 43 (termino -> factor .)
    LESS            reduce using rule 43 (termino -> factor .)
    LESSEQUAL       reduce using rule 43 (termino -> factor .)
    GREATER         reduce using rule 43 (termino -> factor .)
    GREATEREQUAL    reduce using rule 43 (termino -> factor .)
    DEQUAL          reduce using rule 43 (termino -> factor .)
    DISTINT         reduce using rule 43 (termino -> factor .)
    PLUS            reduce using rule 43 (termino -> factor .)
    MINUS           reduce using rule 43 (termino -> factor .)
    RPAREN          reduce using rule 43 (termino -> factor .)
    SEMICOLON       reduce using rule 43 (termino -> factor .)
    COMMA           reduce using rule 43 (termino -> factor .)
    RBRACKET        reduce using rule 43 (termino -> factor .)
    RGREATER        reduce using rule 43 (termino -> factor .)


state 49

    (47) factor -> declaracion_var .

    TIMES           reduce using rule 47 (factor -> declaracion_var .)
    DIVIDE          reduce using rule 47 (factor -> declaracion_var .)
    LESS            reduce using rule 47 (factor -> declaracion_var .)
    LESSEQUAL       reduce using rule 47 (factor -> declaracion_var .)
    GREATER         reduce using rule 47 (factor -> declaracion_var .)
    GREATEREQUAL    reduce using rule 47 (factor -> declaracion_var .)
    DEQUAL          reduce using rule 47 (factor -> declaracion_var .)
    DISTINT         reduce using rule 47 (factor -> declaracion_var .)
    PLUS            reduce using rule 47 (factor -> declaracion_var .)
    MINUS           reduce using rule 47 (factor -> declaracion_var .)
    RPAREN          reduce using rule 47 (factor -> declaracion_var .)
    SEMICOLON       reduce using rule 47 (factor -> declaracion_var .)
    COMMA           reduce using rule 47 (factor -> declaracion_var .)
    RBRACKET        reduce using rule 47 (factor -> declaracion_var .)
    RGREATER        reduce using rule 47 (factor -> declaracion_var .)


state 50

    (8) declaracion_var -> especificador . ID SEMICOLON
    (9) declaracion_var -> especificador . ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> especificador . ID EQUAL estructura_dato SEMICOLON

    ID              shift and go to state 88


state 51

    (62) selection_stmt -> SWITCH LPAREN expresion . RPAREN statement

    RPAREN          shift and go to state 89


state 52

    (63) iteration_stmt -> WHILE LPAREN expresion . RPAREN statement

    RPAREN          shift and go to state 90


state 53

    (73) class_header -> CLASS ID COLON . especificador
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    especificador                  shift and go to state 91

state 54

    (9) declaracion_var -> especificador ID EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 92


state 55

    (10) declaracion_var -> especificador ID EQUAL estructura_dato . SEMICOLON

    SEMICOLON       shift and go to state 93


state 56

    (29) expresion -> LPAREN . expresion RPAREN
    (53) tuple_init -> LPAREN . expresion_list RPAREN
    (46) factor -> LPAREN . expresion RPAREN
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (55) expresion_list -> . expresion_list COMMA expresion
    (56) expresion_list -> . expresion
    (57) expresion_list -> . empty
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (82) empty -> .
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    RPAREN          reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 94
    expresion_list                 shift and go to state 95
    expresion_simple               shift and go to state 45
    empty                          shift and go to state 96
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 57

    (49) estructura_dato -> array_init .

    SEMICOLON       reduce using rule 49 (estructura_dato -> array_init .)


state 58

    (50) estructura_dato -> tuple_init .

    SEMICOLON       reduce using rule 50 (estructura_dato -> tuple_init .)


state 59

    (51) estructura_dato -> vector_init .

    SEMICOLON       reduce using rule 51 (estructura_dato -> vector_init .)


state 60

    (52) array_init -> LBRACKET . expresion_list RBRACKET
    (55) expresion_list -> . expresion_list COMMA expresion
    (56) expresion_list -> . expresion
    (57) expresion_list -> . empty
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (82) empty -> .
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    RBRACKET        reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion_list                 shift and go to state 97
    expresion                      shift and go to state 98
    empty                          shift and go to state 96
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 61

    (54) vector_init -> LGREATER . expresion_list RGREATER
    (55) expresion_list -> . expresion_list COMMA expresion
    (56) expresion_list -> . expresion
    (57) expresion_list -> . empty
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (82) empty -> .
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    RGREATER        reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion_list                 shift and go to state 99
    expresion                      shift and go to state 98
    empty                          shift and go to state 96
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 62

    (23) param -> especificador . ID
    (24) param -> especificador . ID LBRACKET RBRACKET

    ID              shift and go to state 100


state 63

    (17) declaracion_funcion -> especificador ID LPAREN parametro . RPAREN compound_stmt

    RPAREN          shift and go to state 101


state 64

    (19) parametro -> parametro_lista .
    (21) parametro_lista -> parametro_lista . COMMA param

    RPAREN          reduce using rule 19 (parametro -> parametro_lista .)
    COMMA           shift and go to state 102


state 65

    (20) parametro -> VOID .

    RPAREN          reduce using rule 20 (parametro -> VOID .)


state 66

    (22) parametro_lista -> param .

    COMMA           reduce using rule 22 (parametro_lista -> param .)
    RPAREN          reduce using rule 22 (parametro_lista -> param .)


state 67

    (18) declaracion_funcion -> VOID ID LPAREN parametro . RPAREN compound_stmt

    RPAREN          shift and go to state 103


state 68

    (71) declaracion_clase -> class_header LBLOCK class_body RBLOCK .

    VOID            reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    INT             reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    FLOAT           reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    DOUBLE          reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    CHAR            reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    STRING          reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    BOOL            reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    IF              reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    SWITCH          reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    WHILE           reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    CLASS           reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)
    $end            reduce using rule 71 (declaracion_clase -> class_header LBLOCK class_body RBLOCK .)


state 69

    (75) class_member_list -> class_member_list class_member .

    VOID            reduce using rule 75 (class_member_list -> class_member_list class_member .)
    INT             reduce using rule 75 (class_member_list -> class_member_list class_member .)
    FLOAT           reduce using rule 75 (class_member_list -> class_member_list class_member .)
    DOUBLE          reduce using rule 75 (class_member_list -> class_member_list class_member .)
    CHAR            reduce using rule 75 (class_member_list -> class_member_list class_member .)
    STRING          reduce using rule 75 (class_member_list -> class_member_list class_member .)
    BOOL            reduce using rule 75 (class_member_list -> class_member_list class_member .)
    IF              reduce using rule 75 (class_member_list -> class_member_list class_member .)
    SWITCH          reduce using rule 75 (class_member_list -> class_member_list class_member .)
    WHILE           reduce using rule 75 (class_member_list -> class_member_list class_member .)
    RBLOCK          reduce using rule 75 (class_member_list -> class_member_list class_member .)


state 70

    (77) class_member -> especificador ID . SEMICOLON
    (78) class_member -> especificador ID . EQUAL expresion SEMICOLON
    (79) class_member -> especificador ID . LPAREN parametro RPAREN compound_stmt

    SEMICOLON       shift and go to state 104
    EQUAL           shift and go to state 105
    LPAREN          shift and go to state 106


state 71

    (80) class_member -> VOID ID . LPAREN parametro RPAREN compound_stmt

    LPAREN          shift and go to state 107


state 72

    (29) expresion -> LPAREN expresion . RPAREN
    (46) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 108


state 73

    (60) selection_stmt -> IF LPAREN expresion RPAREN . statement
    (61) selection_stmt -> IF LPAREN expresion RPAREN . statement ELSE statement
    (64) statement -> . expresion_stmt
    (65) statement -> . compound_stmt
    (66) expresion_stmt -> . expresion SEMICOLON
    (67) expresion_stmt -> . SEMICOLON
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    SEMICOLON       shift and go to state 113
    LBLOCK          shift and go to state 114
    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 109
    statement                      shift and go to state 110
    expresion_stmt                 shift and go to state 111
    compound_stmt                  shift and go to state 112
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 74

    (27) expresion -> ID EQUAL . expresion
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 115
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 75

    (30) expresion_simple -> expresion_aditiva igualdad . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    LPAREN          shift and go to state 117
    NUMBER          shift and go to state 118
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion_aditiva              shift and go to state 116
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 76

    (38) expresion_aditiva -> expresion_aditiva sumorest . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    LPAREN          shift and go to state 117
    NUMBER          shift and go to state 118
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    termino                        shift and go to state 119
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 77

    (32) igualdad -> LESS .

    LPAREN          reduce using rule 32 (igualdad -> LESS .)
    NUMBER          reduce using rule 32 (igualdad -> LESS .)
    INT             reduce using rule 32 (igualdad -> LESS .)
    FLOAT           reduce using rule 32 (igualdad -> LESS .)
    DOUBLE          reduce using rule 32 (igualdad -> LESS .)
    CHAR            reduce using rule 32 (igualdad -> LESS .)
    STRING          reduce using rule 32 (igualdad -> LESS .)
    BOOL            reduce using rule 32 (igualdad -> LESS .)


state 78

    (33) igualdad -> LESSEQUAL .

    LPAREN          reduce using rule 33 (igualdad -> LESSEQUAL .)
    NUMBER          reduce using rule 33 (igualdad -> LESSEQUAL .)
    INT             reduce using rule 33 (igualdad -> LESSEQUAL .)
    FLOAT           reduce using rule 33 (igualdad -> LESSEQUAL .)
    DOUBLE          reduce using rule 33 (igualdad -> LESSEQUAL .)
    CHAR            reduce using rule 33 (igualdad -> LESSEQUAL .)
    STRING          reduce using rule 33 (igualdad -> LESSEQUAL .)
    BOOL            reduce using rule 33 (igualdad -> LESSEQUAL .)


state 79

    (34) igualdad -> GREATER .

    LPAREN          reduce using rule 34 (igualdad -> GREATER .)
    NUMBER          reduce using rule 34 (igualdad -> GREATER .)
    INT             reduce using rule 34 (igualdad -> GREATER .)
    FLOAT           reduce using rule 34 (igualdad -> GREATER .)
    DOUBLE          reduce using rule 34 (igualdad -> GREATER .)
    CHAR            reduce using rule 34 (igualdad -> GREATER .)
    STRING          reduce using rule 34 (igualdad -> GREATER .)
    BOOL            reduce using rule 34 (igualdad -> GREATER .)


state 80

    (35) igualdad -> GREATEREQUAL .

    LPAREN          reduce using rule 35 (igualdad -> GREATEREQUAL .)
    NUMBER          reduce using rule 35 (igualdad -> GREATEREQUAL .)
    INT             reduce using rule 35 (igualdad -> GREATEREQUAL .)
    FLOAT           reduce using rule 35 (igualdad -> GREATEREQUAL .)
    DOUBLE          reduce using rule 35 (igualdad -> GREATEREQUAL .)
    CHAR            reduce using rule 35 (igualdad -> GREATEREQUAL .)
    STRING          reduce using rule 35 (igualdad -> GREATEREQUAL .)
    BOOL            reduce using rule 35 (igualdad -> GREATEREQUAL .)


state 81

    (36) igualdad -> DEQUAL .

    LPAREN          reduce using rule 36 (igualdad -> DEQUAL .)
    NUMBER          reduce using rule 36 (igualdad -> DEQUAL .)
    INT             reduce using rule 36 (igualdad -> DEQUAL .)
    FLOAT           reduce using rule 36 (igualdad -> DEQUAL .)
    DOUBLE          reduce using rule 36 (igualdad -> DEQUAL .)
    CHAR            reduce using rule 36 (igualdad -> DEQUAL .)
    STRING          reduce using rule 36 (igualdad -> DEQUAL .)
    BOOL            reduce using rule 36 (igualdad -> DEQUAL .)


state 82

    (37) igualdad -> DISTINT .

    LPAREN          reduce using rule 37 (igualdad -> DISTINT .)
    NUMBER          reduce using rule 37 (igualdad -> DISTINT .)
    INT             reduce using rule 37 (igualdad -> DISTINT .)
    FLOAT           reduce using rule 37 (igualdad -> DISTINT .)
    DOUBLE          reduce using rule 37 (igualdad -> DISTINT .)
    CHAR            reduce using rule 37 (igualdad -> DISTINT .)
    STRING          reduce using rule 37 (igualdad -> DISTINT .)
    BOOL            reduce using rule 37 (igualdad -> DISTINT .)


state 83

    (40) sumorest -> PLUS .

    LPAREN          reduce using rule 40 (sumorest -> PLUS .)
    NUMBER          reduce using rule 40 (sumorest -> PLUS .)
    INT             reduce using rule 40 (sumorest -> PLUS .)
    FLOAT           reduce using rule 40 (sumorest -> PLUS .)
    DOUBLE          reduce using rule 40 (sumorest -> PLUS .)
    CHAR            reduce using rule 40 (sumorest -> PLUS .)
    STRING          reduce using rule 40 (sumorest -> PLUS .)
    BOOL            reduce using rule 40 (sumorest -> PLUS .)


state 84

    (41) sumorest -> MINUS .

    LPAREN          reduce using rule 41 (sumorest -> MINUS .)
    NUMBER          reduce using rule 41 (sumorest -> MINUS .)
    INT             reduce using rule 41 (sumorest -> MINUS .)
    FLOAT           reduce using rule 41 (sumorest -> MINUS .)
    DOUBLE          reduce using rule 41 (sumorest -> MINUS .)
    CHAR            reduce using rule 41 (sumorest -> MINUS .)
    STRING          reduce using rule 41 (sumorest -> MINUS .)
    BOOL            reduce using rule 41 (sumorest -> MINUS .)


state 85

    (42) termino -> termino multodiv . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    LPAREN          shift and go to state 117
    NUMBER          shift and go to state 118
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    factor                         shift and go to state 120
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 86

    (44) multodiv -> TIMES .

    LPAREN          reduce using rule 44 (multodiv -> TIMES .)
    NUMBER          reduce using rule 44 (multodiv -> TIMES .)
    INT             reduce using rule 44 (multodiv -> TIMES .)
    FLOAT           reduce using rule 44 (multodiv -> TIMES .)
    DOUBLE          reduce using rule 44 (multodiv -> TIMES .)
    CHAR            reduce using rule 44 (multodiv -> TIMES .)
    STRING          reduce using rule 44 (multodiv -> TIMES .)
    BOOL            reduce using rule 44 (multodiv -> TIMES .)


state 87

    (45) multodiv -> DIVIDE .

    LPAREN          reduce using rule 45 (multodiv -> DIVIDE .)
    NUMBER          reduce using rule 45 (multodiv -> DIVIDE .)
    INT             reduce using rule 45 (multodiv -> DIVIDE .)
    FLOAT           reduce using rule 45 (multodiv -> DIVIDE .)
    DOUBLE          reduce using rule 45 (multodiv -> DIVIDE .)
    CHAR            reduce using rule 45 (multodiv -> DIVIDE .)
    STRING          reduce using rule 45 (multodiv -> DIVIDE .)
    BOOL            reduce using rule 45 (multodiv -> DIVIDE .)


state 88

    (8) declaracion_var -> especificador ID . SEMICOLON
    (9) declaracion_var -> especificador ID . EQUAL expresion SEMICOLON
    (10) declaracion_var -> especificador ID . EQUAL estructura_dato SEMICOLON

    SEMICOLON       shift and go to state 31
    EQUAL           shift and go to state 32


state 89

    (62) selection_stmt -> SWITCH LPAREN expresion RPAREN . statement
    (64) statement -> . expresion_stmt
    (65) statement -> . compound_stmt
    (66) expresion_stmt -> . expresion SEMICOLON
    (67) expresion_stmt -> . SEMICOLON
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    SEMICOLON       shift and go to state 113
    LBLOCK          shift and go to state 114
    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 109
    statement                      shift and go to state 121
    expresion_stmt                 shift and go to state 111
    compound_stmt                  shift and go to state 112
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 90

    (63) iteration_stmt -> WHILE LPAREN expresion RPAREN . statement
    (64) statement -> . expresion_stmt
    (65) statement -> . compound_stmt
    (66) expresion_stmt -> . expresion SEMICOLON
    (67) expresion_stmt -> . SEMICOLON
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    SEMICOLON       shift and go to state 113
    LBLOCK          shift and go to state 114
    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 109
    statement                      shift and go to state 122
    expresion_stmt                 shift and go to state 111
    compound_stmt                  shift and go to state 112
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 91

    (73) class_header -> CLASS ID COLON especificador .

    LBLOCK          reduce using rule 73 (class_header -> CLASS ID COLON especificador .)


state 92

    (9) declaracion_var -> especificador ID EQUAL expresion SEMICOLON .

    VOID            reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    INT             reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    DOUBLE          reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    CHAR            reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    STRING          reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    BOOL            reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    IF              reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    SWITCH          reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    CLASS           reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    $end            reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    TIMES           reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    DIVIDE          reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    LESS            reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    LESSEQUAL       reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    GREATER         reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    GREATEREQUAL    reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    DEQUAL          reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    DISTINT         reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    PLUS            reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    MINUS           reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    RPAREN          reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    SEMICOLON       reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    COMMA           reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    RBRACKET        reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)
    RGREATER        reduce using rule 9 (declaracion_var -> especificador ID EQUAL expresion SEMICOLON .)


state 93

    (10) declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .

    VOID            reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    INT             reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    FLOAT           reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    DOUBLE          reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    CHAR            reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    STRING          reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    BOOL            reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    IF              reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    SWITCH          reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    WHILE           reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    CLASS           reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    $end            reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    TIMES           reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    DIVIDE          reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    LESS            reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    LESSEQUAL       reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    GREATER         reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    GREATEREQUAL    reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    DEQUAL          reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    DISTINT         reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    PLUS            reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    MINUS           reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    RPAREN          reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    SEMICOLON       reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    COMMA           reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    RBRACKET        reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)
    RGREATER        reduce using rule 10 (declaracion_var -> especificador ID EQUAL estructura_dato SEMICOLON .)


state 94

    (29) expresion -> LPAREN expresion . RPAREN
    (46) factor -> LPAREN expresion . RPAREN
    (56) expresion_list -> expresion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 108
    COMMA           reduce using rule 56 (expresion_list -> expresion .)

  ! RPAREN          [ reduce using rule 56 (expresion_list -> expresion .) ]


state 95

    (53) tuple_init -> LPAREN expresion_list . RPAREN
    (55) expresion_list -> expresion_list . COMMA expresion

    RPAREN          shift and go to state 123
    COMMA           shift and go to state 124


state 96

    (57) expresion_list -> empty .

    RPAREN          reduce using rule 57 (expresion_list -> empty .)
    COMMA           reduce using rule 57 (expresion_list -> empty .)
    RBRACKET        reduce using rule 57 (expresion_list -> empty .)
    RGREATER        reduce using rule 57 (expresion_list -> empty .)


state 97

    (52) array_init -> LBRACKET expresion_list . RBRACKET
    (55) expresion_list -> expresion_list . COMMA expresion

    RBRACKET        shift and go to state 125
    COMMA           shift and go to state 124


state 98

    (56) expresion_list -> expresion .

    RBRACKET        reduce using rule 56 (expresion_list -> expresion .)
    COMMA           reduce using rule 56 (expresion_list -> expresion .)
    RGREATER        reduce using rule 56 (expresion_list -> expresion .)


state 99

    (54) vector_init -> LGREATER expresion_list . RGREATER
    (55) expresion_list -> expresion_list . COMMA expresion

    RGREATER        shift and go to state 126
    COMMA           shift and go to state 124


state 100

    (23) param -> especificador ID .
    (24) param -> especificador ID . LBRACKET RBRACKET

    COMMA           reduce using rule 23 (param -> especificador ID .)
    RPAREN          reduce using rule 23 (param -> especificador ID .)
    LBRACKET        shift and go to state 127


state 101

    (17) declaracion_funcion -> especificador ID LPAREN parametro RPAREN . compound_stmt
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 114

    compound_stmt                  shift and go to state 128

state 102

    (21) parametro_lista -> parametro_lista COMMA . param
    (23) param -> . especificador ID
    (24) param -> . especificador ID LBRACKET RBRACKET
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    param                          shift and go to state 129
    especificador                  shift and go to state 62

state 103

    (18) declaracion_funcion -> VOID ID LPAREN parametro RPAREN . compound_stmt
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 114

    compound_stmt                  shift and go to state 130

state 104

    (77) class_member -> especificador ID SEMICOLON .

    VOID            reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    INT             reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    FLOAT           reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    DOUBLE          reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    CHAR            reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    STRING          reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    BOOL            reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    IF              reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    SWITCH          reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    WHILE           reduce using rule 77 (class_member -> especificador ID SEMICOLON .)
    RBLOCK          reduce using rule 77 (class_member -> especificador ID SEMICOLON .)


state 105

    (78) class_member -> especificador ID EQUAL . expresion SEMICOLON
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    especificador                  shift and go to state 50
    expresion                      shift and go to state 131
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49

state 106

    (79) class_member -> especificador ID LPAREN . parametro RPAREN compound_stmt
    (19) parametro -> . parametro_lista
    (20) parametro -> . VOID
    (21) parametro_lista -> . parametro_lista COMMA param
    (22) parametro_lista -> . param
    (23) param -> . especificador ID
    (24) param -> . especificador ID LBRACKET RBRACKET
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    VOID            shift and go to state 65
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    especificador                  shift and go to state 62
    parametro                      shift and go to state 132
    parametro_lista                shift and go to state 64
    param                          shift and go to state 66

state 107

    (80) class_member -> VOID ID LPAREN . parametro RPAREN compound_stmt
    (19) parametro -> . parametro_lista
    (20) parametro -> . VOID
    (21) parametro_lista -> . parametro_lista COMMA param
    (22) parametro_lista -> . param
    (23) param -> . especificador ID
    (24) param -> . especificador ID LBRACKET RBRACKET
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    VOID            shift and go to state 65
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    parametro                      shift and go to state 133
    parametro_lista                shift and go to state 64
    param                          shift and go to state 66
    especificador                  shift and go to state 62

state 108

    (29) expresion -> LPAREN expresion RPAREN .
    (46) factor -> LPAREN expresion RPAREN .

  ! reduce/reduce conflict for RPAREN resolved using rule 29 (expresion -> LPAREN expresion RPAREN .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 29 (expresion -> LPAREN expresion RPAREN .)
  ! reduce/reduce conflict for COMMA resolved using rule 29 (expresion -> LPAREN expresion RPAREN .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 29 (expresion -> LPAREN expresion RPAREN .)
  ! reduce/reduce conflict for RGREATER resolved using rule 29 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 29 (expresion -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 29 (expresion -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 29 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 29 (expresion -> LPAREN expresion RPAREN .)
    RGREATER        reduce using rule 29 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)

  ! RPAREN          [ reduce using rule 46 (factor -> LPAREN expresion RPAREN .) ]
  ! SEMICOLON       [ reduce using rule 46 (factor -> LPAREN expresion RPAREN .) ]
  ! COMMA           [ reduce using rule 46 (factor -> LPAREN expresion RPAREN .) ]
  ! RBRACKET        [ reduce using rule 46 (factor -> LPAREN expresion RPAREN .) ]
  ! RGREATER        [ reduce using rule 46 (factor -> LPAREN expresion RPAREN .) ]


state 109

    (66) expresion_stmt -> expresion . SEMICOLON

    SEMICOLON       shift and go to state 134


state 110

    (60) selection_stmt -> IF LPAREN expresion RPAREN statement .
    (61) selection_stmt -> IF LPAREN expresion RPAREN statement . ELSE statement

    VOID            reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    INT             reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    FLOAT           reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    DOUBLE          reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    CHAR            reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    STRING          reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    BOOL            reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    IF              reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    SWITCH          reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    WHILE           reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    CLASS           reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    $end            reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    RBLOCK          reduce using rule 60 (selection_stmt -> IF LPAREN expresion RPAREN statement .)
    ELSE            shift and go to state 135


state 111

    (64) statement -> expresion_stmt .

    ELSE            reduce using rule 64 (statement -> expresion_stmt .)
    VOID            reduce using rule 64 (statement -> expresion_stmt .)
    INT             reduce using rule 64 (statement -> expresion_stmt .)
    FLOAT           reduce using rule 64 (statement -> expresion_stmt .)
    DOUBLE          reduce using rule 64 (statement -> expresion_stmt .)
    CHAR            reduce using rule 64 (statement -> expresion_stmt .)
    STRING          reduce using rule 64 (statement -> expresion_stmt .)
    BOOL            reduce using rule 64 (statement -> expresion_stmt .)
    IF              reduce using rule 64 (statement -> expresion_stmt .)
    SWITCH          reduce using rule 64 (statement -> expresion_stmt .)
    WHILE           reduce using rule 64 (statement -> expresion_stmt .)
    CLASS           reduce using rule 64 (statement -> expresion_stmt .)
    $end            reduce using rule 64 (statement -> expresion_stmt .)
    RBLOCK          reduce using rule 64 (statement -> expresion_stmt .)
    SEMICOLON       reduce using rule 64 (statement -> expresion_stmt .)
    LBLOCK          reduce using rule 64 (statement -> expresion_stmt .)
    ID              reduce using rule 64 (statement -> expresion_stmt .)
    NUMBER          reduce using rule 64 (statement -> expresion_stmt .)
    LPAREN          reduce using rule 64 (statement -> expresion_stmt .)


state 112

    (65) statement -> compound_stmt .

    ELSE            reduce using rule 65 (statement -> compound_stmt .)
    VOID            reduce using rule 65 (statement -> compound_stmt .)
    INT             reduce using rule 65 (statement -> compound_stmt .)
    FLOAT           reduce using rule 65 (statement -> compound_stmt .)
    DOUBLE          reduce using rule 65 (statement -> compound_stmt .)
    CHAR            reduce using rule 65 (statement -> compound_stmt .)
    STRING          reduce using rule 65 (statement -> compound_stmt .)
    BOOL            reduce using rule 65 (statement -> compound_stmt .)
    IF              reduce using rule 65 (statement -> compound_stmt .)
    SWITCH          reduce using rule 65 (statement -> compound_stmt .)
    WHILE           reduce using rule 65 (statement -> compound_stmt .)
    CLASS           reduce using rule 65 (statement -> compound_stmt .)
    $end            reduce using rule 65 (statement -> compound_stmt .)
    RBLOCK          reduce using rule 65 (statement -> compound_stmt .)
    SEMICOLON       reduce using rule 65 (statement -> compound_stmt .)
    LBLOCK          reduce using rule 65 (statement -> compound_stmt .)
    ID              reduce using rule 65 (statement -> compound_stmt .)
    NUMBER          reduce using rule 65 (statement -> compound_stmt .)
    LPAREN          reduce using rule 65 (statement -> compound_stmt .)


state 113

    (67) expresion_stmt -> SEMICOLON .

    ELSE            reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    VOID            reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    INT             reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    FLOAT           reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    DOUBLE          reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    CHAR            reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    STRING          reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    BOOL            reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    IF              reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    SWITCH          reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    WHILE           reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    CLASS           reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    $end            reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    RBLOCK          reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    LBLOCK          reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    ID              reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    NUMBER          reduce using rule 67 (expresion_stmt -> SEMICOLON .)
    LPAREN          reduce using rule 67 (expresion_stmt -> SEMICOLON .)


state 114

    (68) compound_stmt -> LBLOCK . statement_list RBLOCK
    (69) statement_list -> . statement_list statement
    (70) statement_list -> . statement
    (64) statement -> . expresion_stmt
    (65) statement -> . compound_stmt
    (66) expresion_stmt -> . expresion SEMICOLON
    (67) expresion_stmt -> . SEMICOLON
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    SEMICOLON       shift and go to state 113
    LBLOCK          shift and go to state 114
    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    statement_list                 shift and go to state 136
    statement                      shift and go to state 137
    expresion_stmt                 shift and go to state 111
    compound_stmt                  shift and go to state 112
    expresion                      shift and go to state 109
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 115

    (27) expresion -> ID EQUAL expresion .

    RPAREN          reduce using rule 27 (expresion -> ID EQUAL expresion .)
    SEMICOLON       reduce using rule 27 (expresion -> ID EQUAL expresion .)
    COMMA           reduce using rule 27 (expresion -> ID EQUAL expresion .)
    RBRACKET        reduce using rule 27 (expresion -> ID EQUAL expresion .)
    RGREATER        reduce using rule 27 (expresion -> ID EQUAL expresion .)


state 116

    (30) expresion_simple -> expresion_aditiva igualdad expresion_aditiva .
    (38) expresion_aditiva -> expresion_aditiva . sumorest termino
    (40) sumorest -> . PLUS
    (41) sumorest -> . MINUS

    RPAREN          reduce using rule 30 (expresion_simple -> expresion_aditiva igualdad expresion_aditiva .)
    SEMICOLON       reduce using rule 30 (expresion_simple -> expresion_aditiva igualdad expresion_aditiva .)
    COMMA           reduce using rule 30 (expresion_simple -> expresion_aditiva igualdad expresion_aditiva .)
    RBRACKET        reduce using rule 30 (expresion_simple -> expresion_aditiva igualdad expresion_aditiva .)
    RGREATER        reduce using rule 30 (expresion_simple -> expresion_aditiva igualdad expresion_aditiva .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84

    sumorest                       shift and go to state 76

state 117

    (46) factor -> LPAREN . expresion RPAREN
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 138
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 118

    (48) factor -> NUMBER .

    TIMES           reduce using rule 48 (factor -> NUMBER .)
    DIVIDE          reduce using rule 48 (factor -> NUMBER .)
    PLUS            reduce using rule 48 (factor -> NUMBER .)
    MINUS           reduce using rule 48 (factor -> NUMBER .)
    RPAREN          reduce using rule 48 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 48 (factor -> NUMBER .)
    COMMA           reduce using rule 48 (factor -> NUMBER .)
    RBRACKET        reduce using rule 48 (factor -> NUMBER .)
    RGREATER        reduce using rule 48 (factor -> NUMBER .)
    LESS            reduce using rule 48 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 48 (factor -> NUMBER .)
    GREATER         reduce using rule 48 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 48 (factor -> NUMBER .)
    DEQUAL          reduce using rule 48 (factor -> NUMBER .)
    DISTINT         reduce using rule 48 (factor -> NUMBER .)


state 119

    (38) expresion_aditiva -> expresion_aditiva sumorest termino .
    (42) termino -> termino . multodiv factor
    (44) multodiv -> . TIMES
    (45) multodiv -> . DIVIDE

    LESS            reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    LESSEQUAL       reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    GREATER         reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    GREATEREQUAL    reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    DEQUAL          reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    DISTINT         reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    PLUS            reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    MINUS           reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    RPAREN          reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    SEMICOLON       reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    COMMA           reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    RBRACKET        reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    RGREATER        reduce using rule 38 (expresion_aditiva -> expresion_aditiva sumorest termino .)
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87

    multodiv                       shift and go to state 85

state 120

    (42) termino -> termino multodiv factor .

    TIMES           reduce using rule 42 (termino -> termino multodiv factor .)
    DIVIDE          reduce using rule 42 (termino -> termino multodiv factor .)
    LESS            reduce using rule 42 (termino -> termino multodiv factor .)
    LESSEQUAL       reduce using rule 42 (termino -> termino multodiv factor .)
    GREATER         reduce using rule 42 (termino -> termino multodiv factor .)
    GREATEREQUAL    reduce using rule 42 (termino -> termino multodiv factor .)
    DEQUAL          reduce using rule 42 (termino -> termino multodiv factor .)
    DISTINT         reduce using rule 42 (termino -> termino multodiv factor .)
    PLUS            reduce using rule 42 (termino -> termino multodiv factor .)
    MINUS           reduce using rule 42 (termino -> termino multodiv factor .)
    RPAREN          reduce using rule 42 (termino -> termino multodiv factor .)
    SEMICOLON       reduce using rule 42 (termino -> termino multodiv factor .)
    COMMA           reduce using rule 42 (termino -> termino multodiv factor .)
    RBRACKET        reduce using rule 42 (termino -> termino multodiv factor .)
    RGREATER        reduce using rule 42 (termino -> termino multodiv factor .)


state 121

    (62) selection_stmt -> SWITCH LPAREN expresion RPAREN statement .

    VOID            reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    INT             reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    FLOAT           reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    DOUBLE          reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    CHAR            reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    STRING          reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    BOOL            reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    IF              reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    SWITCH          reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    WHILE           reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    CLASS           reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    $end            reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)
    RBLOCK          reduce using rule 62 (selection_stmt -> SWITCH LPAREN expresion RPAREN statement .)


state 122

    (63) iteration_stmt -> WHILE LPAREN expresion RPAREN statement .

    VOID            reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    INT             reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    FLOAT           reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    DOUBLE          reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    CHAR            reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    STRING          reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    BOOL            reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    IF              reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    SWITCH          reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    WHILE           reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    CLASS           reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    $end            reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)
    RBLOCK          reduce using rule 63 (iteration_stmt -> WHILE LPAREN expresion RPAREN statement .)


state 123

    (53) tuple_init -> LPAREN expresion_list RPAREN .

    SEMICOLON       reduce using rule 53 (tuple_init -> LPAREN expresion_list RPAREN .)


state 124

    (55) expresion_list -> expresion_list COMMA . expresion
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 139
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 125

    (52) array_init -> LBRACKET expresion_list RBRACKET .

    SEMICOLON       reduce using rule 52 (array_init -> LBRACKET expresion_list RBRACKET .)


state 126

    (54) vector_init -> LGREATER expresion_list RGREATER .

    SEMICOLON       reduce using rule 54 (vector_init -> LGREATER expresion_list RGREATER .)


state 127

    (24) param -> especificador ID LBRACKET . RBRACKET

    RBRACKET        shift and go to state 140


state 128

    (17) declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .

    VOID            reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    INT             reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    FLOAT           reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    DOUBLE          reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    CHAR            reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    STRING          reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    BOOL            reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    IF              reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    SWITCH          reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    WHILE           reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    CLASS           reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    $end            reduce using rule 17 (declaracion_funcion -> especificador ID LPAREN parametro RPAREN compound_stmt .)


state 129

    (21) parametro_lista -> parametro_lista COMMA param .

    COMMA           reduce using rule 21 (parametro_lista -> parametro_lista COMMA param .)
    RPAREN          reduce using rule 21 (parametro_lista -> parametro_lista COMMA param .)


state 130

    (18) declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .

    VOID            reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    INT             reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    FLOAT           reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    DOUBLE          reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    CHAR            reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    STRING          reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    BOOL            reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    IF              reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    SWITCH          reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    WHILE           reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    CLASS           reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    $end            reduce using rule 18 (declaracion_funcion -> VOID ID LPAREN parametro RPAREN compound_stmt .)


state 131

    (78) class_member -> especificador ID EQUAL expresion . SEMICOLON

    SEMICOLON       shift and go to state 141


state 132

    (79) class_member -> especificador ID LPAREN parametro . RPAREN compound_stmt

    RPAREN          shift and go to state 142


state 133

    (80) class_member -> VOID ID LPAREN parametro . RPAREN compound_stmt

    RPAREN          shift and go to state 143


state 134

    (66) expresion_stmt -> expresion SEMICOLON .

    ELSE            reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    VOID            reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    INT             reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    FLOAT           reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    DOUBLE          reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    CHAR            reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    STRING          reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    BOOL            reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    IF              reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    SWITCH          reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    WHILE           reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    CLASS           reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    $end            reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    RBLOCK          reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    SEMICOLON       reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    LBLOCK          reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    ID              reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    NUMBER          reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)
    LPAREN          reduce using rule 66 (expresion_stmt -> expresion SEMICOLON .)


state 135

    (61) selection_stmt -> IF LPAREN expresion RPAREN statement ELSE . statement
    (64) statement -> . expresion_stmt
    (65) statement -> . compound_stmt
    (66) expresion_stmt -> . expresion SEMICOLON
    (67) expresion_stmt -> . SEMICOLON
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    SEMICOLON       shift and go to state 113
    LBLOCK          shift and go to state 114
    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    expresion                      shift and go to state 109
    statement                      shift and go to state 144
    expresion_stmt                 shift and go to state 111
    compound_stmt                  shift and go to state 112
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 136

    (68) compound_stmt -> LBLOCK statement_list . RBLOCK
    (69) statement_list -> statement_list . statement
    (64) statement -> . expresion_stmt
    (65) statement -> . compound_stmt
    (66) expresion_stmt -> . expresion SEMICOLON
    (67) expresion_stmt -> . SEMICOLON
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK
    (25) expresion -> . ID
    (26) expresion -> . NUMBER
    (27) expresion -> . ID EQUAL expresion
    (28) expresion -> . expresion_simple
    (29) expresion -> . LPAREN expresion RPAREN
    (30) expresion_simple -> . expresion_aditiva igualdad expresion_aditiva
    (31) expresion_simple -> . expresion_aditiva
    (38) expresion_aditiva -> . expresion_aditiva sumorest termino
    (39) expresion_aditiva -> . termino
    (42) termino -> . termino multodiv factor
    (43) termino -> . factor
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . declaracion_var
    (48) factor -> . NUMBER
    (8) declaracion_var -> . especificador ID SEMICOLON
    (9) declaracion_var -> . especificador ID EQUAL expresion SEMICOLON
    (10) declaracion_var -> . especificador ID EQUAL estructura_dato SEMICOLON
    (11) especificador -> . INT
    (12) especificador -> . FLOAT
    (13) especificador -> . DOUBLE
    (14) especificador -> . CHAR
    (15) especificador -> . STRING
    (16) especificador -> . BOOL

    RBLOCK          shift and go to state 145
    SEMICOLON       shift and go to state 113
    LBLOCK          shift and go to state 114
    ID              shift and go to state 43
    NUMBER          shift and go to state 44
    LPAREN          shift and go to state 41
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    DOUBLE          shift and go to state 15
    CHAR            shift and go to state 16
    STRING          shift and go to state 17
    BOOL            shift and go to state 18

    statement                      shift and go to state 146
    expresion_stmt                 shift and go to state 111
    compound_stmt                  shift and go to state 112
    expresion                      shift and go to state 109
    expresion_simple               shift and go to state 45
    expresion_aditiva              shift and go to state 46
    termino                        shift and go to state 47
    factor                         shift and go to state 48
    declaracion_var                shift and go to state 49
    especificador                  shift and go to state 50

state 137

    (70) statement_list -> statement .

    RBLOCK          reduce using rule 70 (statement_list -> statement .)
    SEMICOLON       reduce using rule 70 (statement_list -> statement .)
    LBLOCK          reduce using rule 70 (statement_list -> statement .)
    ID              reduce using rule 70 (statement_list -> statement .)
    NUMBER          reduce using rule 70 (statement_list -> statement .)
    LPAREN          reduce using rule 70 (statement_list -> statement .)
    INT             reduce using rule 70 (statement_list -> statement .)
    FLOAT           reduce using rule 70 (statement_list -> statement .)
    DOUBLE          reduce using rule 70 (statement_list -> statement .)
    CHAR            reduce using rule 70 (statement_list -> statement .)
    STRING          reduce using rule 70 (statement_list -> statement .)
    BOOL            reduce using rule 70 (statement_list -> statement .)


state 138

    (46) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 147


state 139

    (55) expresion_list -> expresion_list COMMA expresion .

    RPAREN          reduce using rule 55 (expresion_list -> expresion_list COMMA expresion .)
    COMMA           reduce using rule 55 (expresion_list -> expresion_list COMMA expresion .)
    RBRACKET        reduce using rule 55 (expresion_list -> expresion_list COMMA expresion .)
    RGREATER        reduce using rule 55 (expresion_list -> expresion_list COMMA expresion .)


state 140

    (24) param -> especificador ID LBRACKET RBRACKET .

    COMMA           reduce using rule 24 (param -> especificador ID LBRACKET RBRACKET .)
    RPAREN          reduce using rule 24 (param -> especificador ID LBRACKET RBRACKET .)


state 141

    (78) class_member -> especificador ID EQUAL expresion SEMICOLON .

    VOID            reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    INT             reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    FLOAT           reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    DOUBLE          reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    CHAR            reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    STRING          reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    BOOL            reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    IF              reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    SWITCH          reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    WHILE           reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)
    RBLOCK          reduce using rule 78 (class_member -> especificador ID EQUAL expresion SEMICOLON .)


state 142

    (79) class_member -> especificador ID LPAREN parametro RPAREN . compound_stmt
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 114

    compound_stmt                  shift and go to state 148

state 143

    (80) class_member -> VOID ID LPAREN parametro RPAREN . compound_stmt
    (68) compound_stmt -> . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 114

    compound_stmt                  shift and go to state 149

state 144

    (61) selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .

    VOID            reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    INT             reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    DOUBLE          reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    CHAR            reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    STRING          reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    BOOL            reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    IF              reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    SWITCH          reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    WHILE           reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    CLASS           reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    $end            reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)
    RBLOCK          reduce using rule 61 (selection_stmt -> IF LPAREN expresion RPAREN statement ELSE statement .)


state 145

    (68) compound_stmt -> LBLOCK statement_list RBLOCK .

    ELSE            reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    VOID            reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    INT             reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    FLOAT           reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    DOUBLE          reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    CHAR            reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    STRING          reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    BOOL            reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    IF              reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    SWITCH          reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    WHILE           reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    CLASS           reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    RBLOCK          reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    SEMICOLON       reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    LBLOCK          reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    ID              reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    NUMBER          reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)
    LPAREN          reduce using rule 68 (compound_stmt -> LBLOCK statement_list RBLOCK .)


state 146

    (69) statement_list -> statement_list statement .

    RBLOCK          reduce using rule 69 (statement_list -> statement_list statement .)
    SEMICOLON       reduce using rule 69 (statement_list -> statement_list statement .)
    LBLOCK          reduce using rule 69 (statement_list -> statement_list statement .)
    ID              reduce using rule 69 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 69 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 69 (statement_list -> statement_list statement .)
    INT             reduce using rule 69 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 69 (statement_list -> statement_list statement .)
    DOUBLE          reduce using rule 69 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 69 (statement_list -> statement_list statement .)
    STRING          reduce using rule 69 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 69 (statement_list -> statement_list statement .)


state 147

    (46) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RGREATER        reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DEQUAL          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DISTINT         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)


state 148

    (79) class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .

    VOID            reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    INT             reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    FLOAT           reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    DOUBLE          reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    CHAR            reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    STRING          reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    BOOL            reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    IF              reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    SWITCH          reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    WHILE           reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)
    RBLOCK          reduce using rule 79 (class_member -> especificador ID LPAREN parametro RPAREN compound_stmt .)


state 149

    (80) class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .

    VOID            reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    INT             reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    FLOAT           reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    DOUBLE          reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    CHAR            reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    STRING          reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    BOOL            reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    IF              reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    SWITCH          reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    WHILE           reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)
    RBLOCK          reduce using rule 80 (class_member -> VOID ID LPAREN parametro RPAREN compound_stmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 94 resolved as shift
WARNING: reduce/reduce conflict in state 44 resolved using rule (expresion -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 44
WARNING: reduce/reduce conflict in state 108 resolved using rule (expresion -> LPAREN expresion RPAREN)
WARNING: rejected rule (factor -> LPAREN expresion RPAREN) in state 108
