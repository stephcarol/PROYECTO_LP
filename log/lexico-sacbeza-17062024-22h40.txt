LexToken(HASH,'#',1,0)
LexToken(INCLUDE,'include',1,1)
LexToken(LIBRARY,'<iostream>',1,9)
LexToken(HASH,'#',3,21)
LexToken(ID,'define',3,22)
LexToken(ID,'PI',3,29)
LexToken(NUMBER,3,3,32)
LexToken(POINT,'.',3,33)
LexToken(NUMBER,14,3,34)
LexToken(ID,'float',5,38)
LexToken(ID,'add',5,44)
LexToken(LPAREN,'(',5,47)
LexToken(ID,'float',5,48)
LexToken(ID,'a',5,54)
LexToken(COMMA,',',5,55)
LexToken(ID,'float',5,57)
LexToken(ID,'b',5,63)
LexToken(RPAREN,')',5,64)
LexToken(LBLOCK,'{',5,66)
LexToken(RETURN,'return',6,72)
LexToken(ID,'a',6,79)
LexToken(PLUS,'+',6,81)
LexToken(ID,'b',6,83)
LexToken(SEMICOLON,';',6,84)
LexToken(RBLOCK,'}',7,86)
LexToken(INT,'int',9,89)
LexToken(ID,'main',9,93)
LexToken(LPAREN,'(',9,97)
LexToken(RPAREN,')',9,98)
LexToken(LBLOCK,'{',9,100)
LexToken(ID,'float',10,106)
LexToken(ID,'x',10,112)
LexToken(EQUAL,'=',10,114)
LexToken(NUMBER,5,10,116)
LexToken(POINT,'.',10,117)
LexToken(NUMBER,5,10,118)
LexToken(SEMICOLON,';',10,119)
LexToken(ID,'double',11,125)
LexToken(ID,'y',11,132)
LexToken(EQUAL,'=',11,134)
LexToken(NUMBER,10,11,136)
LexToken(POINT,'.',11,138)
LexToken(NUMBER,1,11,139)
LexToken(SEMICOLON,';',11,140)
LexToken(ID,'char',12,146)
LexToken(ID,'c',12,151)
LexToken(EQUAL,'=',12,153)
LexToken(APOSTROPHE,"'",12,155)
LexToken(ID,'A',12,156)
LexToken(APOSTROPHE,"'",12,157)
LexToken(SEMICOLON,';',12,158)
LexToken(INT,'int',13,164)
LexToken(ID,'z',13,168)
LexToken(EQUAL,'=',13,170)
LexToken(NUMBER,3,13,172)
LexToken(SEMICOLON,';',13,173)
LexToken(ID,'const',14,179)
LexToken(INT,'int',14,185)
LexToken(ID,'CONSTANT',14,189)
LexToken(EQUAL,'=',14,198)
LexToken(NUMBER,10,14,200)
LexToken(SEMICOLON,';',14,202)
LexToken(STATIC,'static',15,208)
LexToken(INT,'int',15,215)
LexToken(STATIC,'static',15,219)
LexToken(ID,'_var',15,225)
LexToken(EQUAL,'=',15,230)
LexToken(NUMBER,0,15,232)
LexToken(SEMICOLON,';',15,233)
LexToken(IF,'if',17,240)
LexToken(LPAREN,'(',17,243)
LexToken(ID,'x',17,244)
LexToken(LIBRARY,'< y) {\n        z += static_cast<int>',17,246)
LexToken(LPAREN,'(',17,282)
LexToken(ID,'x',17,283)
LexToken(RPAREN,')',17,284)
LexToken(SEMICOLON,';',17,285)
LexToken(RBLOCK,'}',18,291)
LexToken(ELSE,'else',18,293)
LexToken(LBLOCK,'{',18,298)
LexToken(ID,'z',19,308)
LexToken(MINUSEQUAL,'-=',19,310)
LexToken(STATIC,'static',19,313)
LexToken(ID,'_cast',19,319)
LexToken(LIBRARY,'<int>',19,324)
LexToken(LPAREN,'(',19,329)
LexToken(ID,'y',19,330)
LexToken(RPAREN,')',19,331)
LexToken(SEMICOLON,';',19,332)
LexToken(RBLOCK,'}',20,338)
LexToken(ID,'switch',22,345)
LexToken(LPAREN,'(',22,351)
LexToken(ID,'z',22,352)
LexToken(RPAREN,')',22,353)
LexToken(LBLOCK,'{',22,355)
LexToken(ID,'case',23,365)
LexToken(NUMBER,1,23,370)
LexToken(COLON,':',23,371)
LexToken(STD,'std',24,385)
LexToken(COLON,':',24,388)
LexToken(COLON,':',24,389)
LexToken(COUT,'cout',24,390)
LexToken(LIBRARY,'<< "Case 1" << std::endl;\n            break;\n        case 2:\n            std::cout << "Case 2" << std::endl;\n            break;\n        default:\n            std::cout << "Default case" << std::endl;\n            break;\n    }\n\n    for (int i = 0; i < 5; i++) {\n        std::cout << "i: " << i << std::endl;\n    }\n\n    while (z >',24,395)
LexToken(NUMBER,0,24,722)
LexToken(RPAREN,')',24,723)
LexToken(LBLOCK,'{',24,725)
LexToken(STD,'std',25,735)
LexToken(COLON,':',25,738)
LexToken(COLON,':',25,739)
LexToken(COUT,'cout',25,740)
LexToken(LGREATER,'<<',25,745)
LexToken(STRING,'"z',25,748)
LexToken(COLON,':',25,750)
LexToken(QUOTES,'"',25,752)
LexToken(LGREATER,'<<',25,754)
LexToken(ID,'z',25,757)
LexToken(LGREATER,'<<',25,759)
LexToken(STD,'std',25,762)
LexToken(COLON,':',25,765)
LexToken(COLON,':',25,766)
LexToken(ENDL,'endl',25,767)
LexToken(SEMICOLON,';',25,771)
LexToken(ID,'z',26,781)
LexToken(MINUSMINUS,'--',26,782)
LexToken(SEMICOLON,';',26,784)
LexToken(RBLOCK,'}',27,790)
LexToken(ID,'do',29,797)
LexToken(LBLOCK,'{',29,800)
LexToken(STD,'std',30,810)
LexToken(COLON,':',30,813)
LexToken(COLON,':',30,814)
LexToken(COUT,'cout',30,815)
LexToken(LGREATER,'<<',30,820)
LexToken(STRING,'"Static variable',30,823)
LexToken(COLON,':',30,839)
LexToken(QUOTES,'"',30,841)
LexToken(LGREATER,'<<',30,843)
LexToken(STATIC,'static',30,846)
LexToken(ID,'_var',30,852)
LexToken(LGREATER,'<<',30,857)
LexToken(STD,'std',30,860)
LexToken(COLON,':',30,863)
LexToken(COLON,':',30,864)
LexToken(ENDL,'endl',30,865)
LexToken(SEMICOLON,';',30,869)
LexToken(STATIC,'static',31,879)
LexToken(ID,'_var',31,885)
LexToken(PLUSPLUS,'++',31,889)
LexToken(SEMICOLON,';',31,891)
LexToken(RBLOCK,'}',32,897)
LexToken(WHILE,'while',32,899)
LexToken(LPAREN,'(',32,905)
LexToken(STATIC,'static',32,906)
LexToken(ID,'_var',32,912)
LexToken(LESS,'<',32,917)
LexToken(NUMBER,5,32,919)
LexToken(RPAREN,')',32,920)
LexToken(SEMICOLON,';',32,921)
LexToken(INT,'int',34,928)
LexToken(TIMES,'*',34,931)
LexToken(ID,'p',34,933)
LexToken(EQUAL,'=',34,935)
LexToken(ID,'new',34,937)
LexToken(INT,'int',34,941)
LexToken(LBRACKET,'[',34,944)
LexToken(NUMBER,10,34,945)
LexToken(RBRACKET,']',34,947)
LexToken(SEMICOLON,';',34,948)
LexToken(FOR,'for',35,954)
LexToken(LPAREN,'(',35,958)
LexToken(INT,'int',35,959)
LexToken(ID,'i',35,963)
LexToken(EQUAL,'=',35,965)
LexToken(NUMBER,0,35,967)
LexToken(SEMICOLON,';',35,968)
LexToken(ID,'i',35,970)
LexToken(LESS,'<',35,972)
LexToken(NUMBER,10,35,974)
LexToken(SEMICOLON,';',35,976)
LexToken(ID,'i',35,978)
LexToken(PLUSPLUS,'++',35,979)
LexToken(RPAREN,')',35,981)
LexToken(LBLOCK,'{',35,983)
LexToken(ID,'p',36,993)
LexToken(LBRACKET,'[',36,994)
LexToken(ID,'i',36,995)
LexToken(RBRACKET,']',36,996)
LexToken(EQUAL,'=',36,998)
LexToken(ID,'i',36,1000)
LexToken(TIMES,'*',36,1002)
LexToken(NUMBER,2,36,1004)
LexToken(SEMICOLON,';',36,1005)
LexToken(RBLOCK,'}',37,1011)
LexToken(ID,'delete',38,1017)
LexToken(LBRACKET,'[',38,1023)
LexToken(RBRACKET,']',38,1024)
LexToken(ID,'p',38,1026)
LexToken(SEMICOLON,';',38,1027)
LexToken(ID,'try',40,1034)
LexToken(LBLOCK,'{',40,1038)
LexToken(ID,'throw',41,1048)
LexToken(STRING,'"An error ',41,1054)
LexToken(ID,'occurred',41,1064)
LexToken(QUOTES,'"',41,1072)
LexToken(SEMICOLON,';',41,1073)
LexToken(RBLOCK,'}',42,1079)
LexToken(ID,'catch',42,1081)
LexToken(LPAREN,'(',42,1087)
LexToken(ID,'const',42,1088)
LexToken(ID,'char',42,1094)
LexToken(TIMES,'*',42,1098)
LexToken(ID,'msg',42,1100)
LexToken(RPAREN,')',42,1103)
LexToken(LBLOCK,'{',42,1105)
LexToken(STD,'std',43,1115)
LexToken(COLON,':',43,1118)
LexToken(COLON,':',43,1119)
LexToken(ID,'cerr',43,1120)
LexToken(LGREATER,'<<',43,1125)
LexToken(ID,'msg',43,1128)
LexToken(LGREATER,'<<',43,1132)
LexToken(STD,'std',43,1135)
LexToken(COLON,':',43,1138)
LexToken(COLON,':',43,1139)
LexToken(ENDL,'endl',43,1140)
LexToken(SEMICOLON,';',43,1144)
LexToken(RBLOCK,'}',44,1150)
LexToken(STD,'std',46,1157)
LexToken(COLON,':',46,1160)
LexToken(COLON,':',46,1161)
LexToken(COUT,'cout',46,1162)
LexToken(LGREATER,'<<',46,1167)
LexToken(STRING,'"Size of ',46,1170)
LexToken(INT,'int',46,1179)
LexToken(COLON,':',46,1182)
LexToken(QUOTES,'"',46,1184)
LexToken(LGREATER,'<<',46,1186)
LexToken(ID,'sizeof',46,1189)
LexToken(LPAREN,'(',46,1195)
LexToken(INT,'int',46,1196)
LexToken(RPAREN,')',46,1199)
LexToken(LGREATER,'<<',46,1201)
LexToken(STD,'std',46,1204)
LexToken(COLON,':',46,1207)
LexToken(COLON,':',46,1208)
LexToken(ENDL,'endl',46,1209)
LexToken(SEMICOLON,';',46,1213)
LexToken(STD,'std',47,1219)
LexToken(COLON,':',47,1222)
LexToken(COLON,':',47,1223)
LexToken(COUT,'cout',47,1224)
LexToken(LGREATER,'<<',47,1229)
LexToken(STRING,'"PI',47,1232)
LexToken(COLON,':',47,1235)
LexToken(QUOTES,'"',47,1237)
LexToken(LGREATER,'<<',47,1239)
LexToken(ID,'PI',47,1242)
LexToken(LGREATER,'<<',47,1245)
LexToken(STD,'std',47,1248)
LexToken(COLON,':',47,1251)
LexToken(COLON,':',47,1252)
LexToken(ENDL,'endl',47,1253)
LexToken(SEMICOLON,';',47,1257)
LexToken(RETURN,'return',49,1264)
LexToken(NUMBER,0,49,1271)
LexToken(SEMICOLON,';',49,1272)
LexToken(RBLOCK,'}',50,1274)
